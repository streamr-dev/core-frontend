// @flow

const { formatExternalUrl } = require('$shared/utils/url')
const routes = require('$routes').default

const streamrRoot = process.env.STREAMR_URL || ''

export default {
    streamrSite: streamrRoot,
    login: formatExternalUrl(streamrRoot, 'login/auth'),
    signup: formatExternalUrl(streamrRoot, 'register/signup'),
    whitepaper: formatExternalUrl(streamrRoot, 'whitepaper'),
    logout: formatExternalUrl(streamrRoot, 'logout'),
    site: {
        network: formatExternalUrl(streamrRoot, 'learn/network'),
    },
    contributionSummary: 'https://s3.amazonaws.com/streamr-public/Crowdcontribution+Information+Summary+(20170912).pdf',
    publisherTerms: 'https://s3.amazonaws.com/streamr-public/streamr-data-provider-agreement.pdf',
    allowanceInfo: 'https://tokenallowance.io',
    resetAllowanceInfo: 'https://github.com/ethereum/EIPs/issues/20#issuecomment-263524729',
    // ---->
    blog: 'https://medium.com/streamrblog',
    blogPosts: {
        nodered: 'https://medium.com/streamrblog/streamr-node-red-integration-tutorial-b0b410496354', // referred to from docs
        spark: 'https://medium.com/streamrblog/integrating-streamr-with-apache-spark-4c049f2688a1', // referred to from docs
    },
    root: '/',
    internalLogin: '/login',
    marketplace: {
        main: '/marketplace',
        products: '/marketplace/products',
        products2: '/marketplace/products2',
        createProduct: '/marketplace/products/create',
        createProductPreview: '/marketplace/products/preview',
    },
    userpages: {
        main: '/core',
        canvases: '/core/canvases',
        dashboards: '/core/dashboards',
        streams: '/core/streams',
        streamCreate: '/core/stream/show',
        streamShow: '/core/stream/show',
        streamPreview: '/core/stream/preview',
        profile: '/core/profile/edit',
        products: '/core/products',
        purchases: '/core/purchases',
        transactions: '/core/transactions',
        settings: '/core/settings',
    },
    editor: {
        canvasEditor: routes.canvasEditor(),
        canvasEmbed: routes.canvasEmbed(),
        dashboardEditor: routes.dashboardEditor(),
    },
    community: {
        trello: routes.communityTrello(),
        telegram: routes.communityTelegram(),
        reddit: routes.communityReddit(),
        twitter: routes.communityTwitter(),
        linkedin: routes.communityLinkedin(),
        youtube: routes.communityYoutube(),
        medium: routes.communityMedium(),
        github: routes.communityGithub(),
        devForum: 'https://forum.streamr.dev/',
    },
    contact: {
        general: 'mailto:contact@streamr.com',
        media: 'mailto:media@streamr.com',
        jobs: 'mailto:jobs@streamr.com',
        labs: 'mailto:labs@streamr.com',
    },
    external: {
        ethereum: 'https://www.ethereum.org',
        decentralizedWeb: 'https://blockchainhub.net/web3-decentralized-web/',
    },
}

export const docsLinks = {
    docs: '/docs',
    introduction: '/docs/introduction',
    gettingStarted: '/docs/getting-started',
    streams: '/docs/streams',
    introToStreams: '/docs/streams/intro-to-streams',
    streamsInCore: '/docs/streams/using-streams-in-core',
    streamsViaSdk: '/docs/streams/using-streams-via-sdk',
    streamsViaApi: '/docs/streams/using-streams-via-api',
    dataSigningAndVerification: '/docs/streams/data-signing-and-verification',
    endToEndEncryption: '/docs/streams/end-to-end-encryption',
    partitioning: '/docs/streams/partitioning',
    integrationPatterns: '/docs/streams/integration-patterns',
    canvases: '/docs/canvases',
    introToCanvases: '/docs/canvases/intro-to-canvases',
    usingCanvases: '/docs/canvases/using-canvases-in-core',
    modulesBasics: '/docs/canvases/modules-basics',
    modulesAdvanced: '/docs/canvases/modules-advanced',
    moduleReference: '/docs/module-reference',
    moduleReferenceBoolean: '/docs/module-reference/boolean',
    moduleReferenceCustomModules: '/docs/module-reference/custom-modules',
    moduleReferenceInput: '/docs/module-reference/input',
    moduleReferenceIntegrations: '/docs/module-reference/integrations',
    moduleReferenceList: '/docs/module-reference/list',
    moduleReferenceMap: '/docs/module-reference/map',
    moduleReferenceStreams: '/docs/module-reference/streams',
    moduleReferenceText: '/docs/module-reference/text',
    moduleReferenceTimeAndDate: '/docs/module-reference/time-and-date',
    moduleReferenceTimeSeries: '/docs/module-reference/time-series',
    moduleReferenceUtils: '/docs/module-reference/utils',
    moduleReferenceVisualizations: '/docs/module-reference/visualizations',
    dashboards: '/docs/dashboards',
    products: '/docs/products',
    dataUnions: '/docs/data-unions',
    introToDataUnions: '/docs/data-unions/intro-to-data-unions',
    dataUnionsInCore: '/docs/data-unions/build-data-unions-in-core',
    integrateDataUnions: '/docs/data-unions/integrate-data-unions-into-your-app',
    dataUnionsWithSdk: '/docs/data-unions/build-data-unions-with-sdk',
    introToProducts: '/docs/products/intro-to-products',
    productsDataunions: '/docs/products/data-unions',
    tutorials: '/docs/tutorials',
    buildingPubSubTutorial: '/docs/tutorials/building-pub-sub',
    customModuleTutorial: '/docs/tutorials/building-custom-canvas-module',
    dataToken: '/docs/data-token',
    core: '/docs/core',
    introToCore: '/docs/core/intro-to-core',
    marketplace: '/docs/marketplace',
    introToMarketplace: '/docs/marketplace/introduction-marketplace',
    marketplaceDataunions: '/docs/marketplace/data-unions',
    sdk: '/docs/sdk',
    sdkOverview: '/docs/sdk/overview',
    javascriptSdk: '/docs/sdk/javascript-sdk',
    javaSdk: '/docs/sdk/java-sdk',
    pythonSdk: '/docs/sdk/python-sdk',
    api: '/docs/api',
    apiOverview: '/docs/api/api-overview',
    authentication: '/docs/api/authentication',
    apiStreamsViaApi: '/docs/api/using-streams-via-api',
    apiExplorer: '/docs/api-explorer',
    technicalNotes: '/docs/technical-notes',
}
