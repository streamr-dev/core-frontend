.ModuleSearch {

}

body .Category {
  font-weight: var(--medium);
  letter-spacing: 1px;
  text-transform: uppercase;
}

body .Category.active {
  border-left: 4px solid #0324FF;
  padding-left: 20px;
}

body .SearchCategory {
  font-size: 10px;
  font-family: var(--sans);
  font-weight: 600;
  color: #323232;
  text-transform: uppercase;
  letter-spacing: 1.43px;
  line-height: 40px;
}

body .SearchCategory:hover {
  background: transparent;
}

.ModuleSearch .ModuleItem.WithCategory {
  display: grid;
  grid-template-columns: 50% 50%;
  grid-gap: 12px;
}

.ModuleSearch .ModuleItem .ModuleName {
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.ModuleSearch .ModuleItem .ModuleCategory {
  font-size: 12px;
  font-family: var(--sans);
  font-weight: 400;
  text-transform: uppercase;
  color: #ADADAD;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.ModuleSearch .StreamItem {
  line-height: 28px;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.ModuleSearch .StreamItem:active,
.ModuleSearch .ModuleItem:active {
  cursor: grabbing;
}

.ModuleSearch .StreamItem .Description {
  font-size: 10px;
  font-family: var(--sans);
  font-weight: 400;
  color: #ADADAD;
  line-height: 12px;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.dragHandle {
}

.dragElement {
  bottom: 0;
  right: 0;
  position: absolute;
  z-index: -1;
  background-color: #FFFFFF;
  color: #323232;
  border-radius: calc(0.25 * var(--um));
  max-width: calc(12.5 * var(--um));
  min-height: calc(3.75 * var(--um));
  display: grid;
  padding: 16px 18px 11px;
  grid-row-gap: 2px;
  font-family: var(--mono);
  font-size: 12px;
  line-height: 1;
  font-weight: var(--medium);
  text-align: center;
  align-items: center;
}

.dropText {
  letter-spacing: 1px;
  text-transform: uppercase;
}

.dragModuleName {
  letter-spacing: 0;
  text-overflow: ellipsis;
  white-space: nowrap;
  overflow: hidden;
}

.dragImage {
  color: red;
  width: 24px;
  height: 24px;
  position: absolute;
  top: -12px;
  left: -12px;
}

body:global(:not(.react-draggable-transparent-selection)) {
  /* don't add transitions when user manually resizing */
  .ResizableBox {
    transition: height 300ms cubic-bezier(0.64, 0.04, 0.35, 1), width 300ms cubic-bezier(0.64, 0.04, 0.35, 1);
  }
}
