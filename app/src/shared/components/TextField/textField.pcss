/**
 * We use onAutoFillStart and onAuthFillCancel to detect
 * autocompletion on a text field. Don't remove them!
 */
@keyframes onAutoFillStart {
  from {}
  to {}
}

@keyframes onAutoFillCancel {
  from {}
  to {}
}

.root {
  color: var(--greyDark);
  background-color: white;
  border-radius: 4px;
  border: 1px solid #EFEFEF;
  display: block;
  font-size: 1rem;
  height: 2.5um;
  line-height: 1.5rem;
  width: 100%;
  padding: 0 1rem;
  box-sizing: border-box;
  box-shadow: none;
  outline: none;

  &:focus {
    outline: none;
    box-shadow: none;
    border: 1px solid #0324FF;
  }

  &::placeholder {
    color: #CDCDCD;
  }
}

.root.dark {
  background-color: #FDFDFD;
}

.root:-webkit-autofill {
  animation-name: onAutoFillStart;
}

.root:not(:-webkit-autofill) {
  animation-name: onAutoFillCancel;
}

.root[type=number] {
  appearance: textfield; /* Hide spin buttons for Mozilla based browsers */
  margin: 0;
  display: inline-block;
  width: calc(100% - 24px);
}

/* Hide spin buttons for Webkit based browsers */
.root[type=number]::-webkit-inner-spin-button,
.root[type=number]::-webkit-outer-spin-button {
  appearance: none;
  margin: 0;
}

.buttonContainer {
  display: inline-grid;
  grid-template-rows: 50% 50%;
  position: absolute;
  right: 24px;
  margin: 1px; /* We don't want to overlap with text field's border */
}

.numberButton {
  width: 24px;
  height: 19px;
  background-color: transparent;
  border: 0;
  border-left: 1px solid #EFEFEF;
  border-radius: 0;
  margin: 0;
  padding: 0;
  display: flex;
  justify-content: center;

  &,
  &:--idle,
  &:--enter {
    outline: none;
  }

  &:active {
    background-color: #EFEFEF;
  }

  & > svg {
    display: flex;
    align-self: center;
    color: #323232;
    width: 8px;
    height: 8px;
  }
}

.numberButton:first-child {
  border-bottom: 1px solid #EFEFEF !important;
}

.actionContainer {
  display: inline-block;
  position: absolute;
  right: 0.5rem;
  top: 50%;
  transform: translate(0, -50%);
}

.actionContainer.isOpen {
  z-index: 1;
}
